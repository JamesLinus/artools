#!/bin/bash
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

version=@version@

LIBDIR='@libdir@'
SYSCONFDIR='@sysconfdir@'

[[ -r ${LIBDIR}/util-msg.sh ]] && source ${LIBDIR}/util-msg.sh
import ${LIBDIR}/util.sh
import ${LIBDIR}/util-publish-pkg.sh

show_profile(){
#     prepare_transfer "$1"
# #     info "Profile: [$1]"
    msg2 "src_dir: ${src_dir}"
    msg2 "target_dir: ${target_dir}"
}

display_settings(){
    show_version
    show_config

#     msg "PROFILE:"
#     msg2 "build_lists: %s" "$(show_build_lists ${list_dir_iso})"
#     msg2 "build_list_iso: %s" "${build_list_pkg}"
#     msg2 "is_build_list: %s" "${is_build_list}"

    msg "OPTIONS:"
    msg2 "limit: %s kB/s" "${limit}"

    msg "ARGS:"
    msg2 "pull: %s" "${pull}"
    msg2 "push: %s" "${push}"
    msg2 "verbose: %s" "${verbose}"

    msg "REMOTE:"
    msg2 "account: %s" "${account}"
    msg2 "host: %s" "${host}"
    msg2 "project: %s" "${project}"

    msg "SYNC:"
    msg2 "src_dir: ${src_dir}"
    msg2 "target_dir: ${target_dir}"
}

load_user_info

load_config "${AT_USERCONFDIR}/artools.conf" || load_config "${SYSCONFDIR}/artools.conf"

run_dir=${repo_dir}

pretend=false
push=false
pull=false
verbose=false
repository='system'

rsync_args=(-rtxis --progress --delete)

usage() {
    echo "Usage: ${0##*/} [options]"
    echo "    -r                 Repository to sync [default:${repository}]"
    echo "    -l                 Limit bandwidth in kB/s [default:${limit}]"
    echo "    -u                 Source folder to upload"
    echo '    -d                 Remote folder to download'
    echo '    -q                 Query settings and pretend upload'
    echo '    -v                 Verbose output'
    echo '    -h                 This help'
    echo ''
    echo ''
    exit $1
}

opts='r:l:duvqh'

while getopts "${opts}" arg; do
    case "${arg}" in
        l) limit="$OPTARG" ;;
        r) repository="$OPTARG" ;;
        d) pull=true ;;
        u) push=true; rsync_args+=(-L) ;;
        v) verbose=true; rsync_args+=(-v --stats) ;;
        q) pretend=true; rsync_args+=(-n) ;;
        h|?) usage 0 ;;
        *) echo "invalid argument '${arg}'"; usage 1 ;;
    esac
done

shift $(($OPTIND - 1))

timer_start=$(get_timer)

rsync_args+=(--bwlimit=${limit})

${pretend} && display_settings && exit 1

sync_dir "${repository}"
