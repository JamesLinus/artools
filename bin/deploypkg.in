#!/bin/bash
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

version=@version@

LIBDIR='@libdir@'
SYSCONFDIR='@sysconfdir@'

[[ -r ${LIBDIR}/util-msg.sh ]] && source ${LIBDIR}/util-msg.sh
import ${LIBDIR}/util.sh
import ${LIBDIR}/util-publish-pkg.sh

show_transfer(){
    local repo="$1"
    msg2 "local: %s" "${repos_local}/$repo/"
    msg2 "remote: %s" "${repos_remote}/$repo/"
}

display_settings(){
    show_version
    show_config

    msg "OPTIONS:"
    msg2 "repository: %s" "${repository}"
    msg2 "package: %s" "${package}"

    msg "ARGS:"
    msg2 "download: %s" "${download}"
    msg2 "upload: %s" "${upload}"
    msg2 "verbose: %s" "${verbose}"

    msg "REMOTE:"
    msg2 "account: %s" "${account}"
    msg2 "host: %s" "${host}"
    msg2 "project: %s" "${project}"

    msg "SYNC:"
    show_transfer "${repository}"
}

load_user_info

load_config "${AT_USERCONFDIR}/artools.conf" || load_config "${SYSCONFDIR}/artools.conf"

pretend=false
upload=false
download=true
verbose=false
verbose=false

rsync_args=(-rxisP --progress --delete -e ssh)

usage() {
    echo "Usage: ${0##*/} [options]"
    echo "    -r                 Repository to sync [default:${repository}]"
    echo "    -u                 Upload repository"
    echo '    -d                 Download repository'
    echo '    -q                 Query settings and pretend upload'
    echo '    -v                 Verbose output'
    echo '    -h                 This help'
    echo ''
    echo ''
    exit $1
}

orig_argv=("$0" "$@")

opts='r:duvqh'

while getopts "${opts}" arg; do
    case "${arg}" in
        r) repository="$OPTARG" ;;
        d) download=false ;;
        u) upload=true; rsync_args+=(-L) ;;
        v) verbose=true; rsync_args+=(-v --stats) ;;
        q) pretend=true; rsync_args+=(-n) ;;
        h|?) usage 0 ;;
        *) echo "invalid argument '${arg}'"; usage 1 ;;
    esac
done

shift $(($OPTIND - 1))

timer_start=$(get_timer)

${pretend} && display_settings && exit 1

sync_repo "${repository}"
